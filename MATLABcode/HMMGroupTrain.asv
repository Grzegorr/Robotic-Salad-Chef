%States AND emissions meaning:
%1 - nothing
%2 - banana
%3 - applecorrelations
%4 - orange
%5 - brocoli
%6 - carrot
%7 - knife

%STATES - human ground truth
%EMMISIONS - what correlations say

% Files with extracted correlations and Ground Truth
correlation_files = ["Correlations/FinalSalad1.npy", "Correlations/FinalSalad2.npy", "Correlations/FinalSalad3.npy", "Correlations/FinalSalad4.npy", "Correlations/FinalSalad5.npy", "Correlations/FinalSalad6.npy", "Correlations/FinalSalad7.npy", "Correlations/FinalSalad8.npy"];
GT_files = ["GroundTruth/FinalSalad1_GTstates.npy", "GroundTruth/FinalSalad2_GTstates.npy", "GroundTruth/FinalSalad3_GTstates.npy", "GroundTruth/FinalSalad4_GTstates.npy", "GroundTruth/FinalSalad5_GTstates.npy", "GroundTruth/FinalSalad6_GTstates.npy", "GroundTruth/FinalSalad7_GTstates.npy", "GroundTruth/FinalSalad8_GTstates.npy"];

%correlation_files = ["Correlations/FinalSalad11.npy", "Correlations/FinalSalad12.npy", "Correlations/FinalSalad13.npy", "Correlations/FinalSalad14.npy", "Correlations/FinalSalad15.npy", "Correlations/FinalSalad16.npy", "Correlations/FinalSalad17.npy", "Correlations/FinalSalad18.npy"];
%GT_files = ["GroundTruth/FinalSalad11_GTstates.npy", "GroundTruth/FinalSalad12_GTstates.npy", "GroundTruth/FinalSalad13_GTstates.npy", "GroundTruth/FinalSalad14_GTstates.npy", "GroundTruth/FinalSalad15_GTstates.npy", "GroundTruth/FinalSalad16_GTstates.npy", "GroundTruth/FinalSalad17_GTstates.npy", "GroundTruth/FinalSalad18_GTstates.npy"];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%   READING IN EMMISSIONS                %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
threshold = 0.6;
correlations = [];

for file = correlation_files
correlations_single = readNPY(file);
correlations = [correlations, correlations_single];
size(correlations)
end

correlations(1,:);

%put in separate arrays
banana_corr = correlations(2,:);
apple_corr = correlations(3,:);
orange_corr = correlations(5,:);
broccoli_corr = correlations(6,:);
carrot_corr = correlations(7,:);
knife_corr = correlations(8,:);

% analogue correlation to binary correlation
seq = [];
length = size(banana_corr);
length = length(2);
for i = 1:length
    number = 999;
    maximum = max([banana_corr(i) apple_corr(i) orange_corr(i) broccoli_corr(i) carrot_corr(i) knife_corr(i)]);
    if maximum == banana_corr(i)
        number = 2;
    end
    if maximum == apple_corr(i)
        number = 3;
    end
    if maximum == orange_corr(i)
        number = 4;
    end
    if maximum == broccoli_corr(i)
        number = 5;
    end
    if maximum == carrot_corr(i)
        number = 6;
    end
    if maximum == knife_corr(i)
        number = 7;
    end
    if maximum < threshold
        number = 1;
    end   
    seq = [seq number];
end
seq;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%          READING IN STATES             %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
states = [];

for file = GT_files
states_single = readNPY(file);
states = [states, states_single'];
size(states)
end



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%               TRAINING                 %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

[TRANS,EMIT] = hmmestimate(seq,states);
TRANS
EMIT


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%               SAVE DATA                %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

save('LastTraining.mat', 'TRANS', 'EMIT');
clear